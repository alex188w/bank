spring:
  application:
    name: gateway-service
  # zipkin:
  #   base-url: http://localhost:9411
  # micrometer:
  #   tracing:
  #     sampling:
  #       probability: 1.0
  security:
    oauth2:
      client:
        registration:
          gateway-user:                # registrationId (локальное имя)
            provider: keycloak
            client-id: gateway-service
            client-secret: client-secret"gateway-service"
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/gateway-service"
            scope:
              - openid
              - profile
              - email

          gateway-client:              # локальное имя для client_credentials
            provider: keycloak
            client-id: gateway-service
            client-secret: client-secret"gateway-service"
            authorization-grant-type: client_credentials
            scope:
              - openid

        provider:
          keycloak:
            issuer-uri: http://localhost:8090/realms/bank
            # можно не указывать остальные поля, issuer-uri подставит их автоматически

      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/bank

  r2dbc:
    url: r2dbc:postgresql://localhost:5432/bank?currentSchema=users
    username: yourName
    password: yourPassword

  # sql:
  #   init:
  #     mode: never
  
  webflux:
    static-path-pattern: "/static/**"
          
  cloud:
    gateway:
      httpclient:
        wiretap: true
      httpserver:
        wiretap: true
      default-filters:
        - RemoveRequestHeader=Cookie
      routes:
        - id: cash-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/cash/**
          filters:
            - StripPrefix=1

        - id: accounts-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/accounts/**
          filters:
            - StripPrefix=1

        - id: exchange-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/exchange/**
          filters:
            - StripPrefix=1

        - id: exchangeGenerator
          uri: http://localhost:8085
          predicates:
            - Path=/api/exchangeGenerator/**
          filters:
            - StripPrefix=1

        - id: authService
          uri: http://localhost:8089
          predicates:
            - Path=/api/authService/**
          filters:
            - StripPrefix=1

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info

keycloak:
  server-url: http://localhost:8090
  realm: bank
  client-id: gateway-service
  client-secret: client-secret"gateway-service"

logging:
  level:
    org.springframework.web.reactive.function.client.ExchangeFunctions: DEBUG
    org.springframework.security.oauth2.client: DEBUG