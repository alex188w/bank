spring:
  application:
    name: account-service


  security:
      oauth2:
        resourceserver:
          jwt:
            issuer-uri: http://localhost:8090/realms/bank

        client:
          registration:
            account-service-client:      # имя регистрации — можно любое понятное
              provider: keycloak
              client-id: account-service    # этот клиент должен быть создан в Keycloak  
              client-secret: client-secret"account-service"  # ваш client-secret из Keycloak для account-service
              scope: openid, profile, email
              authorization-grant-type: client_credentials
          provider:
            keycloak:
              token-uri: http://localhost:8090/realms/bank/protocol/openid-connect/token

  r2dbc:
    url: r2dbc:postgresql://localhost:5432/bank?currentSchema=account
    username: yourName   # ваш логин для postgresql
    password: yourPassword  # ваш пароль для postgresql

  # cloud:
  #   consul:
  #     host: localhost
  #     port: 8500
  #     enabled: true
  #     discovery:
  #       register: true
  #       prefer-ip-address: true

  # config:
  #   import: "optional:consul:/account-service/data"

  cloud:
    consul:
      enabled: false        # полностью отключаем Consul
      config:
        enabled: false
      discovery:
        enabled: false

server:
  port: 8082

logging:
  level:
    root: INFO